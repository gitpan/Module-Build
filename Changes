Revision history for Perl extension Module::Build.

0.26 (pending, still in beta)

 - Removed some language from the Module::Build::Compat documentation
   that encouraged people to include a Build.PL without a Makefile.PL.
   Also changed "a replacement for MakeMaker" to "an alternative to
   MakeMaker" in the main documentation, which is basically what I
   meant all along (i.e. a replacement for MakeMaker in your
   particular build process - MakeMaker is never going to be fully
   replaced in the perl world at large, of course), but some people
   got the impression I was a little more truculent toward MakeMaker
   than I really am.

 - Added the formal concepts of "features" and "config data" for
   distributions.  This allows the module author to define a certain
   set of features that the user can switch on and off (usually
   according to whether they have the proper prerequisites for them),
   and to save build-time configuration information in a standardized
   format.  See the main documentation of Module::Build for more
   details.  (Note that the name of this system was called
   "BuildConfig" for a while in beta, but now it's called
   "ConfigData".)

 - Added an 'auto_features' capability, which simplifies the process
   of defining features that depend on a set of prerequisites.

 - Added the 'get_options' parameter, which lets module authors
   declare certain command-line arguments their Build.PL can accept
   [David Wheeler]

 - Changed the split_like_shell() method to use the shellwords()
   function from Text::ParseWords (a core module since 5.0), which
   does a much better job than the split() we were using.

 - Added a 'testpod' action, which checks the syntactic validity of
   all POD files in the distribution using Test::Pod.  This eliminates
   the need for doing so in a regression test. [Initial patch by Mark
   Stosberg]

 - Added a process_files_by_extension() method, which generalizes the
   kind of processing (essentially just copying) that happens for .pm
   and .pod files, and makes it available to other user-defined types
   of files.  See the new cookbook entry.

 - Improved compatibility with version.pm when authors are using
   version objects as their $VERSION variables.  Now
   version_from_file() can deal with these objects.  Currently we
   stringify them right away, but perhaps in the future we will
   preserve them as objects for a while.

 - During 'distdir' and 'distmeta' actions, die a bit more gracefully
   if there's no MANIFEST (i.e. explicitly say that a MANIFEST is
   required). [Spotted by Adrian Howard]

 - Eliminated a recursive dependency between creating the MANIFEST
   file and creating the META.yml file.  [Spotted by Dave Rolsky]

 - On Win32, where a single directory might be known variously as
   "Module-Build-0.25_03" or "MODULE~1.25_", we now use
   Win32::GetShortPathName($cwd) to verify that the 'Build' script is
   being run from the correct directory, rather than just a string
   comparison.

 - The add_to_cleanup() method will now accept glob()-style patterns
   in addition to explicit filenames.  Also documented the fact that
   they can be specified in either Unix-style or native-style
   notation.

 - Passing a PREFIX value to a pass-through Makefile 'make install'
   now has the same effect as passing it to 'perl Makefile.PL' (it
   dies with a helpful message).

 - Added the 'testcover' action, which runs a test suite using
   Devel::Cover.  [Dave Rolsky]

 - Added the 'lib' and 'arch' installation directories to the search
   path for the 'diff' action, since they won't necessarily (though
   they usually will) be in @INC at installation time. [Suggested by
   Kevin Baker]

 - The "=head3" POD directive isn't supported in older podlators
   (particularly Pod::Man), so we don't use it anymore.

 - Fixed a typo & improved the docs in the SUBCLASSING section. [Ron
   Savage]

 - Added the '.tmp' suffix to the default MANIFEST.SKIP file, which
   should avoid adding things like pod2htmi.tmp to the MANIFEST [Ron
   Savage]

 - Backup files from Emacs, containing the string '.#' in their names,
   should no longer find their way into the blib/ directory (and from
   there into installation directories).

 - Worked around an unpleasant interaction between version.pm and the
   version-checking code that makes sure Module::Build's version
   hasn't changed during the lifetime of the 'Build' script. [Reported
   by Trevor Schellhorn]

 - Fixed a problem in htmlify_pods() that would produce test failures
   on Cygwin (and probably elsewhere).  [Yitzchak Scott-Thoennes]

 - Fixed a test failure on Cygwin (and probably elsewhere) in
   t/compat.t, resulting from empty environment variables being set to
   the empty string (as opposed to simply being unset) by their mere
   presence in the "EXPORT:" list.

 - Fixed a fatal error that occurred when the author specified
   'dist_author' manually in their Build.PL script. [Spotted by Ron
   Savage]

 - The 'provides' section of the META.yml file wasn't being built
   properly on Win32, because of a mismatch between URL-format and
   native-format pathnames.  Fixed.  [Reported by Robert Rothenberg]

 - The progress message "lib/Foo.xs -> lib/Foo.c" was previously being
   output even when the Foo.c file wasn't being rebuilt.  It's now
   fixed.

 - Fixed a couple of places in Compat.pm where it could have forgotten
   which perl interpreter it had been run with ($^X isn't very
   trustworthy).

 - On some systems, the way we updated the timestamp on the
   "lib/Foo.bs" file (one of the output files for XS-based modules)
   was failing.  It's been replaced by a simple call to utime().

 - Fixed a problem in t/compat.t that prevented it from being run
   individually using 'make test TEST_FILES=t/compat.t'.  The problem
   was that a couple environment variables (TEST_FILES, MAKEFLAGS)
   were being passed through to subprocesses, and confused them.

 - Fixed an important typo in the documentation for the 'install_base'
   parameter ('libdoc' and 'bindoc' were switched). [Ray Zimmerman]

 - The pass-through Makefiles (type 'small' or 'passthrough') now
   support the TEST_FILES parameter to 'make test'.

 - Fixed a fatal error that would occur on perl 5.005 when building
   HTML documentation, because its version of Pod::Html was old and
   didn't like some of the parameters we fed it. [Spotted by Blair
   Zajac]

 - The final line of the generated pass-through Makefile was missing
   its trailing newline, which is now fixed. [Chip Salzenberg]

 - We now depend on YAML version at least 0.35 and at most version
   0.49, so that we don't pick up a new (and backward-incompatible) beta
   version from CPAN.

 - Squashed a warning in t/basic.t about '"Foo::Module::VERSION" used
   only once', and one in PPMMaker about $^V being undefined. [Blair
   Zajac]

 - Added a couple temporary output files from HTML documentation
   generation to the cleanup list.  [Toby Ovod-Everett]

 - The PodParser module will now only extract paragraphs in the
   'AUTHOR' section of the pod if they contain an '@' character.  This
   tends to do a better job, heuristically speaking, of returning
   relevant stuff.

 - Added regression tests and a helper method ( add_build_elements() )
   for adding new elements to the build process.  Also some
   documentation.

 - Wrote a recipe in the Cookbook for adding new elements to the build
   process, and a recipe for changing the order in which the steps in
   the build process will occur.

0.25  Sun Apr 25 11:12:36 CDT 2004

 - During the 'distdir' action, if no MANIFEST.SKIP file exists, we
   will now create a reasonable default one. [Randy Sims]

 - In Makefile compatibility mode, some arguments (like UNINST,
   TEST_VERBOSE, etc.) given to 'make' are now recognized and passed
   through to Module::Build. [Randy Sims]

 - The regression tests now make sure that several pass-through
   Makefile.PL parameters are dealt with correctly.

 - Added support for the 'LIB' parameter to passthrough
   Makefile.PLs. [Spotted by Jesse Erlbaum]

 - Passing a 'PREFIX' parameter to a passthrough Makefile.PL was
   supposed to make it die with a helpful error message, but instead
   it just ignored it and blindly tried to install to the wrong place.
   This is now fixed.  [Spotted by Jesse Erlbaum]

 - Added an extra_compiler_flags() accessor method.

 - If the 'recursive_test_files' option was turned on, the test files
   weren't sorted, but returned in an apparently random order.  Now
   they're sorted.  [Martyn Peck]

 - Documented the 'tar' and 'gzip' parameters to the 'dist' and
   'ppmdist' actions.

 - The generation of HTML documentation now works (it was accidentally
   partially implemented with an itchy patch-application finger in
   0.24).  [Randy Kobes]

 - Fixed a fatal bug when building META.yml with YAML.pm and
   'dynamic_config' is set. [Reported by Jaap Karssenberg]

 - Fixed some incorrect error messages that occurred when
   compiling/linking C sources went awry.

 - If the author uses a custom builder subclass, that subclass will
   now be loaded correctly in the passthrough Makefile.PL if the
   author uses the 'small' or 'passthrough' Makefile.PL options in
   Module::Build::Compat. [Martyn Peck and Jaap Karssenberg]

 - If the author uses a custom builder subclass created dynamically
   through the subclass() method, passthrough Makefile.PLs (of type
   'passthrough' or 'small') didn't work properly, because the custom
   builder module wouldn't be loaded at the right time.  This has been
   fixed.  [Reported by Toby Ovod-Everett]

 - In M::B-generated 'traditional' Makefile.PLs, the entries in
   'PREREQ_PM' are now sorted ASCIIbetically rather than randomly.

 - The install_types() method will now return any additional types
   given as 'install_path' arguments, as well as all elements of the
   current 'install_sets' entry.  This makes it easier to add new
   types of installable objects to the mix.

 - As a consequence of the previous change, there is no longer any
   need to have an explicit 'install_types' data member, so it has
   been removed.

 - In the second example code for the Module::Build->subclass()
   method, the Module::Build module needed to be loaded before calling
   its methods. [John Peacock]

 - Fixed minor error in the POD structure of Module::Build and
   Module::Build::Platform::VMS docs.


0.24  Wed Feb 25 15:57:00 CST 2004

 - Fixed a problem with incude_dirs not being propagated to the 'ccs'
   file when compiling XS files on Win32. [Randy Sims and Steve Hay]

 - In 0.23, Module::Build::Compat->fake_makefile() started choking
   when no 'build_class' parameter was supplied in the Makefile.PL.
   Since these Makefile.PLs still exist on CPAN, we now default
   'build_class' to 'Module::Build', which was the old 0.22 behavior
   anyway.  [Reported by Martin Titz and Jeremy Seitz]

 - Added documentation for the 'include_dirs' parameter to
   new(). [Steve Hay]

 - Changed the no-op command on Win32 from 'rem' to 'rem>nul' inside
   pass-through Makefiles. [Randy Sims]

 - The 'autosplit' parameter now accepts an array reference if
   multiple files should be split. [Jaap Karssenberg]

 - find_perl_interpreter() will now use $^X (if absolute), $ENV{PATH}
   (if $^X isn't absolute), and $Config{perlpath}, in that order.
   Also, we now make darn sure the result is the same version of perl,
   by checking Config::myconfig() for a match against the current
   perl.  [Reported by Edward Sabol]

 - Fixed a fatal error on Win32 (and any other platform that doesn't
   define an installation location for Unix-style man pages) during
   installation.

0.23  Sun Feb  8 22:01:18 CST 2004

 - Fixed a compatibility problem in pass-through Makefiles (created by
   Module::Build::Compat).  Some 'make' utilities (for example, BSD
   make) didn't like a '@' by itself on a line, so we stole some
   'NOOP' code from MakeMaker to fix it. [Reported by Mathieu Arnold]

 - Added a 'ppm_dist' action, which just makes the PPD file and then
   makes a tarball out of the blib/ directory. [Randy Sims]

 - The @INC of the parent process is now propagated to child processes
   when processing *.PL files. [Reported by Jaap Karssenberg]

 - We now only attempt to fix the shebang line on a script if the
   shebang line matches the regex /perl/i .  This fixes some instances
   where people put shell scripts in their distributions. [Jaap
   Karssenberg]

 - We no longer generate a 'requires', 'recommends', 'conflicts',
   etc. entry in the META.yml file if there's no data to go in it.

 - Added a documentation reference to Michael Schwern's wiki for tips
   on conversion from MakeMaker to M::B. [Randy Sims]

 - If there are script_files, we now add EXE_FILES to the
   'traditional' Makefile.PL generated by M::B::Compat. [Suggested by
   Yuval Kogman]

 - Documented the 'test_files' parameter to new(). [Reported by Tony
   Bowden]

 - Fixed a problem in "Build help <action>", which didn't find the
   correct help chunk if <action> was the final element in a POD
   list. [Jaap Karssenberg]

 - Fixed a problem in the get_action_docs() method which gave
   incorrect results if the method was called more than once in the
   same program.

 - Fixed a problem in which actions defined by user subclasses
   wouldn't be available via the pass-through Makefiles created by
   Module::Build::Compat. [Reported by Jaap Karssenberg]

 - We now use Data::Dumper instead of our own ad-hoc serialization
   routines to create the 'traditional' Makefile.PL
   arguments. [Suggested by Yuval Kojman]

0.22  Sat Jan 10 22:05:39 CST 2004

 - On Unixish platforms, the syntax "FOO=BAR /bin/baz arg arg" now
   works when present in $Config{ld}.  This solves a problem on Mac OS
   X 10.3. [Reported by Adam Foxson]

 - The have_c_compiler() now also tests whether the linker seems to
   work too.

 - Fixed a problem with creating the distribution tarball in which
   permissions would usually be all read-only.  We now use our own
   file-copying routines rather than those in ExtUtils::Manifest,
   because those do some annoying extra permissions-setting stuff for
   no apparent reason.  It makes me happy that this was a very very
   easy patch to make.  [Reported by Thomas Klausner]

 - The compile_c() method now includes $Config{cccdlflags} in its
   command invocation.  It's usually empty, but not always, so we
   didn't notice for a while. [Richard Clamp]

 - On some platforms it's common to have a $Config{make} defined, but
   no 'make' utility actually available.  We now detect this and skip
   some 'make' compatibility tests. [Randy Sims]

 - Fixed a spurious testing failure on non-Unix platforms that
   happened because we accidentally call localize_file_path() on empty
   strings in the test suite. [Spotted by Randy Sims on Windows]

 - Made the 'name', 'abstract', 'author', and 'version' properties
   required when building a PPD file. [Spotted by Randy Sims, Dave
   Rolsky, & Glenn Linderman]

 - When building a 'traditional' Makefile.PL with
   Module::Build::Compat, we now use 'VERSION_FROM' when possible,
   rather than always using 'VERSION'.  This way the Makefile.PL
   doesn't have to get modified every release.

 - Made some fixups to the 'PPM' info-file, improving compatibility
   with ActiveState's PPM tools. [Randy Sims, Glenn Linderman]

 - The 'dist_author' property can now accept multiple authors, see the
   docs for more info. [Randy Sims]

 - If the user doesn't have YAML.pm installed during ACTION_dist, we
   now create a minimal YAML.pm anyway, without any dependency
   information.

 - The 'distribution_type' field is no longer created in META.yml
   files, in accordance with the finding made at the London CLPAN
   meeting that it's essentially meaningless and ill-defined.

 - The 'dist' action now accepts an optional 'tar' parameter to use a
   system utility for building the tarball, and a 'gzip' parameter for
   compressing it.  If these are used, Archive::Tar won't be invoked.
   This was added because Archive::Tar is producing some very
   non-cross-platform tarballs that many tar utilities can't handle.

 - During testing, if YAML.pm isn't installed, then we won't try
   making a tarball either, since this would invoke YAML to create the
   META.yml file.

 - Fixed a problem with chmod() being called incorrectly on MacOS
   (i.e. MacPerl, not Mac OS X).  [Spotted by Paul Sanford Toney]

 - Fixed a problem with the --config flag not being treated properly
   (essentially ignored) on the command line for 'perl Build.PL' or
   'Build <action>'. [Spotted by Jakub Bogusz]

 - Added a new config() method to get at the Build object's notion of
   the %Config hash.

 - Test::Harness is starting to contend for the Most Crotchety Module
   Award.  Work around a few of its nits when setting harness
   switches. [Spotted by Diab Jerius]

 - Now the Build script will die() if we're run from the wrong
   directory, rather than trying to chdir() to what it thinks is the
   right directory and do its work there.  See
   https://rt.cpan.org/Ticket/Display.html?id=4039 . [Chris Dolan]

 - Changed the manpage separator on OS/2 to '.'. [Ilya Zakharevich]

 - On OS/2, disable C compilation, since apparently it isn't working
   there. [Reported by Ilya Zakharevich]

 - Inserted a comment into auto-generated Makefile.PLs saying it was
   auto-generated. [Randy Sims]

 - Fixed some annoying behavior in generated passthrough Makefile.PLs
   when the user chose not to install Module::Build, or if
   installation failed. [Reported by Ilya Zakharevich and Richard
   Clamp]

 - Moved the documentation for 'codebase' to the section where it's
   relevant. [Randy Sims, Glenn Linderman]

 - Fixed a have_c_compiler() failure on some platforms, we now define
   a boot_compilet() function (since we're compiling a library, not an
   executable). [Randy Sims]

 - Added a recipe to the Module::Build::Cookbook describing how to
   maintain compatibility with older versions of CPAN.pm [Jim Cromie]

 - Removed caveat about "looking for alternatives" in how hashes are
   specified on the command line, since an alternative has been found.

 - Previously most warnings about optional prerequisites looked like
   they were actually error messages about required prerequisites.
   This has been corrected. [Reported again by Sagar Shah]

 - Added support for building XS (and C in general) stuff on AIX.
   This was done by a small reorganization of prelink_c() method from
   Windows.pm to Build.pm, and it is only invoked for the platforms
   that need it invoked.  AIX also massages some very naughty bits
   (MakeMaker macro variables) in $Config{lddlflags} that should never
   have been put there, but alas, they're there, so we find & resolve
   them.

 - Added OS/2 ($^O = 'os2') to the list of Unix-like platforms.  This
   basically means that most platform-specific operations will be done
   in a Unix-like manner.

 - Pass-through Makefiles will now die() when they're given a PREFIX
   parameter, and suggest using 'destdir' or 'install_base' instead.
   Previously they just ignored the parameter and tried to install to
   the default location, which is clearly not what the user wanted.

 - Updated my email address in the documentation to a more recent
   variant.

 - Add NetBSD to the list of Unix-like systems. [Adrian Bunk]

 - Add SVR5 to the list of Unix-like systems. [Rafael Garcia-Suarez]

 - We now use Pod::Parser to find the ABSTRACT and AUTHOR when it's
   available on the system. [initial patch by Randy Sims]

 - Fixed a little scalar/list buglet in a documentation example.

0.21  Wed Oct 15 20:47:05 CDT 2003

 - Added a have_c_compiler() method.

 - Added documentation for the requires(), recommends(),
   build_requires(), and conflicts() methods.

 - On Unix platforms, we now create the "Build" script with a #! line
   matching the perl interpreter that was used to invoke the Build.PL
   script, rather than whatever is in $Config{startperl}.  This avoids
   a potential warning about the interpreters not matching. [Spotted
   by Ken Y. Clark]

 - The Unix version now uses the safer multi-argument form of system()
   when building distribution tarballs.

 - Added a regression test for the 'dist' action to the t/runthrough.t
   test.

 - Fixed a problem with File::Spec usage when creating the names of
   'libdoc' manual pages - the code wasn't dealing with the volume or
   file portions correctly on certain platforms.

 - When creating the names of the 'libdoc' manual pages, we no longer
   assume that pods are under the hard-coded paths 'blib/lib' or
   'blib/arch'.

 - Fixed a crashing bug that could sometimes occur when the
   distribution contained no 'lib' directory. [Chris Dolan]

 - Fixed a crashing bug that happened when the user had .PL files in
   the lib/ directory and didn't explicitly name them in a hash
   reference to the new() constructor. [Chris Reinhardt, bug #4036]

 - .PL files are now passed the names of their target file(s) on the
   command line when they run.

 - When YAML.pm wasn't installed, t/runthrough.t wasn't properly
   skipping some tests that required YAML.  This is now fixed.
   [Stephen J. Smith]

 - Added documentation for the dist_version() and dist_name()
   methods. [Spotted by Johan Vromans]

 - Existing values in $ENV{HARNESS_PERL_SWITCHES} are now respected
   and not squashed when we run the 'test' action. [Paul Johnson]

 - On cygwin, the separator string for manual page names has been set
   to '.'.  Previously it was '::', inherited from Unix. [Yitzchak
   Scott-Thoennes]

 - Avoid a warning when Build.PL is run (i.e. when the new() method is
   called) and no MANIFEST file exists. [Michael Schwern and Kevin
   Ruscoe]

 - Added documentation for the 'code' and 'docs' actions. [Steve
   Purkis and Mark Stosberg]

 - The internal method compile_support_files() has been renamed to
   process_support_files() in order to make it consistent with other
   processing methods.  Note that it was never documented using the
   old name.  It's still not documented, actually.  Maybe later.

 - Skip the 'write' pseudo-entry in the 'diff' action's installation
   map. [Chris Dolan]

 - Fixed a bug in which notes() set in the Build.PL before
   create_build_script() was called would get lost unless more notes()
   were also set afterwards. [Spotted by Dave Rolsky]

 - The process of building elements of the distribution is now driven
   by a list of build elements, paving the way for letting people add
   their own types of build elements in future versions of
   Module::Build (or in the current version with some difficulty).

 - Fixed some linking errors on Cygwin. [Randy Sims, Terrence Brannon]

 - Fixed a line-ending problem with detecting the dist_abstract
   properly on Cygwin. [Randy Sims]

 - Fixed a problem with signatures that occurred if 'distsign' was
   called before 'distdir' - the signature would be generated twice.

 - Added a 'create_readme' parameter to new(), which will use
   Pod::Text to generate a README from the main (dist_version_from)
   module file during the 'distdir' action.

 - We now refuse to run the 'Build' script if it was created using a
   different version of Module::Build.  This has caused a couple of
   nasty bugs in the past, I don't want to know what it would cause in
   the future.

 - Documentation for do_system() has been added. [Dave Rolsky]

 - run_perl_script() is now available as a class method, though it
   will need to (re-)find the perl interpreter in this case.

 - Added a new_from_context() method that authors of automated tools
   like CPANPLUS and CPAN can use instead of running all tasks as
   sub-processes.  We also use it in the regression tests for
   Module::Build itself.  ** Note that this method is currently
   undocumented because its name may change in the future. **

 - When signing distributions with Module::Signature, we now
   automatically add the SIGNATURE file to the MANIFEST, avoiding an
   unpleasant chicken/egg problem for the module author.
   [unpleasantness spotted by sungo]

 - In Module::Build::Compat, added support for the 'verbose' parameter
   to Makefile.PL [spotted by Soren Andersen, fixed by Michael
   Schwern]

 - The Module::Build distribution now has a cryptographic 'SIGNATURE'
   file created by Module::Signature.

 - Added proper documentation for the subclass() method. [spotted by
   Jonathan Steinert]

 - Worked around a Config.pm bug in Red Hat 9 which prevented man
   pages from being installed in the correct places. [spotted by Ville
   Skytta]

 - Fixed a Module::Build::Compat bug in which setting INSTALLDIRS
   caused a crash. [spotted by Ilya Martynov]

0.20  Tue Aug 26 14:34:07 CDT 2003

 - Separated the 'build' action into two separate actions, 'code' and
   'docs'.  This is similar to MakeMaker's separation of the 'all'
   target into 'pure_all' and 'manifypods'.  This fixes a permissions
   hassle in which doing 'sudo Build install' would often create local
   doc files that needed superuser permissions to delete.

 - Enhanced the 'help' action - 'Build help foo' will now show the POD
   documentation for the 'foo' action.

 - Added a notes() feature, which helps share data transparently
   between the Build.PL and t/*.t scripts.

 - The installation process will now create man(1) and man(3) pages
   from POD in modules & scripts, and install them.  We don't build
   man pages when there's nowhere to install them, such as on some
   Win32 or most Mac systems.  [large patch by Steve Purkis, 5.005 fix
   by Mathieu Arnold]

 - The 'distdir' action now copies files to the distribution
   directory, rather than making them hard links to the original
   files.  This allows authors to do last-minute alterations of the
   files without affecting the originals. [Dave Rolsky]

 - If the author uses XS files in nonstandard locations, the copied
   versions of those files will now be cleaned up properly.

 - In invoking the 'test' action or invoking 'xsubpp', we now use the
   same perl executable as we use everywhere else, rather than blindly
   using $^X or $Config{perlpath} (neither of which are very
   reliable).

 - Fixed a problem with the 'install_path' parameter given to
   'Build.PL' being lost in subsequent actions. [Reported by Mathieu
   Arnold]

 - Fixed yet another bug with installation directories, in which the
   'install_base' parameter wasn't being respected on the command
   line.  [Spotted by Jonathan Swartz]

 - Changed the way the depends_on() method works inside action
   subroutines - now each action will only run once per dispatch()
   invocation (similar to how perl's require() function works).  This
   helps avoid some difficult problems with dependency loops.

 - Changed the documentation for the 'autosplit' parameter to give
   reasons why it may not be a good idea to use, but no longer
   threaten to remove it.  [Suggested by Martyn J. Pearce]

 - Improved the formatting of the 'traditional' Makefile.PL generated
   by Module::Build::Compat->create_makefile_pl. [Michael Schwern]

 - The 'traditional' Makefile.PL will now use the 'module_name'
   parameter (as NAME) if it's available, otherwise it will continue
   to use the 'dist_name' (as DISTNAME). [Michael Schwern]

 - Created read/write accessor methods for all our 'properties'.
   [Michael Schwern]

 - The 'test_files' parameter can now be specified using glob() syntax
   (i.e. 't/*.t'), and the corresponding test_files() method is now a
   read/write accessor.

 - The location of the 'blib' directory is now a property of the Build
   object - nobody is likely to notice this change, with any luck, but
   it makes the design and code cleaner.

 - The 'disttest' and 'distsign' methods now chdir() back to the
   directory where they started, rather than to the base_dir of the
   build.

 - Improved comparisons of version strings containing underscore
   characters (indicating "beta" status). [Steve Purkis]

 - Added documentation for the 'dist_author', 'dist_abstract', and
   'codebase' parameters to new(), and for the 'ppd' action. [Dave
   Rolsky]

 - Added documentation for the up_to_date() and contains_pod()
   methods. [Dave Rolsky]

 - 'traditional' pass-through Makefile.PLs will now contain an
   INSTALLDIRS parameter matching the Build.PL's 'installdirs'
   setting.

 - version_from_file() now ignores $VERSION variables that are defined
   in POD or comments.  It can still be tricked by $VERSIONs in string
   literals, though.  [Steve Purkis]

 - The code to find packages in module files now uses Steve's scanning
   method (above) to skip package-declaration-lookalikes in POD or
   comments.

 - The 'disttest' action will now propagate its @INC settings to its
   subprocesses.

0.19  Wed Jul  9 22:34:02 CDT 2003

 - Added support for the 'install_path' parameter, which allows custom
   specification of where things should be installed.  This is a major
   improvement to Module::Build's functionality.

 - Added the 'install_base' parameter.  Provides an easy way to
   install to local or alternative directory trees.

 - We now install scripts by default to $Config{installsitebin}
   instead of $Config{installscript}.  Neither is a great choice, but
   the former is likely to be [analogous to] /usr/local/bin, and the
   latter is likely to be [something like] /usr/bin .  If/when there's
   a $Config{installsitescript}, we'll start using that automatically.

 - Fixed a problem on Win32 in which C and XS files wouldn't be
   compiled properly, and the user would see an error about 'Can't
   locate object method "format_compiler_cmd"'.
   (http://rt.cpan.org/Ticket/Display.html?id=2391)

 - We now use the correct perl interpreter (via
   Module::Build->find_perl_interpreter) in pass-through makefiles.

 - The t/compat.t test now uses $Config{make} instead of just 'make'
   to test makefile compatibility.  This fixes some failures on Win32.
   We also skip this test entirely if no make utility is available.

 - Alternative distribution layouts are now supported via the
   'pm_files', 'pod_files', 'xs_files', 'PL_files', and 'script_files'
   parameters to new().  This should help people transition from
   MakeMaker, and might even help us write an automatic transition
   tool.

 - Added tests to t/runthrough.t that check to see installation is
   happening correctly.

 - Added experimental code to build a .ppd file, in support of
   ActiveState's "Perl Package Manager". [original patch by Dave
   Rolsky]
 
 - For authors who use Module::Signature to sign their distributions,
   we now create the SIGNATURE file right in the distribution
   directory, rather than creating it in the top-level directory and
   copying it into place.  This solves problems related to having
   files get out of date with respect to their signatures.
 
 - We now don't depend on Module::Info to scan for packages during the
   'dist' action anymore, because it's way too aggressive about
   loading other modules that you may not want loaded.  We now just
   (ick, yuck) scan the .pm files with a regular expression to find
   "package Foo::Bar;" statements.

 - Silenced some annoying copyright/logo output from Microsoft 'nmake'
   during Makefile compatibility testing. [Randy W. Sims]

 - Command-line arguments may now either be specified using the syntax
   '--foo foovalue' as well as the traditional syntax 'foo=foovalue'.
   The former is often more convenient for shell tab-completion when
   the value is a filename (as in 'Build test --test_files t/basic.t').

 - Command-line arguments may now include non-named parameters, which
   make some actions more natural.  For instance, the 'diff' action
   may now be invoked as 'Build diff -u' rather than as
   'Build diff flags=-u'.

 - Pass-through Makefile.PLs now convert unknown Makefile.PL
   parameters to lower-case and hand them to Build.PL, rather than
   ignoring them.  This means we only have to account for the
   differences in the interface, not the entire interface, in
   translating parameters.

 - We now issue a warning & don't proceed if asked to make a distdir
   and there's no MANIFEST or it's empty.

 - Moved INSTALL to INSTALL.txt to increase compatibility with various
   odd versions of 'make' during 'make install' on case-insensitive
   filesystems (like nmake on Win32, often).  Only affects the
   Makefile compatibility layer.  [reported by Andrew Savige]

 - Module::Build->known_actions() now works as a class method.

 - Pass-through makefiles now list each action individually rather
   than using a ".DEFAULT" catch-all.  This improves compatibility
   with 'nmake' on Win32, and probably some other less common 'make'
   dialects.  [Andrew Savige]

 - We're now more aggressive about testing the pass-through makefiles,
   e.g. making sure they can run 'all' and 'test' targets, and making
   sure the Makefile itself actually exists.

 - Fixed a problem with check_installed_status() when installed
   version contains non-numeric characters like underscores.

 - Fixed a problem with a bareword 'File::Spec' in one of the test
   scripts that caused it not to compile under 5.8.0 (but is fine
   under 5.6).

 - Fixed a problem with the 'destdir' installation parameter on
   platforms that have volume identifiers in path names (like "C:" on
   Win32).  The identifier is now stripped from installation
   directories before prepending the destdir path.  The destdir path
   may still have a volume identifier on it.

 - Added an 'add_to_cleanup' parameter to new() that calls
   add_to_cleanup() immediately for the given files.

 - The distribution directory (e.g. Sample-Module-0.13/ ) will now be
   deleted during the 'clean' or 'realclean' actions.
 
 - During testing of modules, blib/lib and blib/arch are now added as
   absolute paths, not relative.  This helps tests that load the
   modules at runtime and may change the current working directory
   (like Module::Build itself does during testing).
 
 - The $Config{cc} entry on some people's systems is something like
   'ccache gcc', so we now split that string using split_like_shell().
   [Richard Clamp]

 - Added documentation for 'extra_linker_flags' parameter, and added a
   corresponding 'extra_compiler_flags' parameter. [original patch by
   Richard Clamp]

 - The pass-through Makefile created by Module::Build::Compat now
   supports MakeMaker options like POLLUTE=1 and INC.  We also just
   warn & skip when we see any unknown MM parameters, rather than
   dying.  [Dave Rolsky]

 - Fixed an error about how @INC and $ENV{PERL5LIB} interact during
   the testing of M::B itself. [jk <billy2000@fastmail.fm>]

 - The pass-through Makefile doesn't include 'recommended' M::B
   dependencies in the Makefile anymore, since they're not strictly
   necessary.  In particular, this makes installing M::B itself
   easier.

 - A new 'create_makefile_pl' parameter lets you use
   Module::Build::Compat during the 'distdir' (or 'dist') action to
   automatically create a Makefile.PL for compatibility with
   ExtUtils::MakeMaker.  The parameter's value should be one of the
   styles named in the Module::Build::Compat documentation.

 - When compiling C code, we now respect 'pollute' and 'inc'
   parameters. (XXX - needs docs) [Dave Rolsky]
   
 - Made the creation of the "install map" more generic.  (XXX - needs
   documentation)

 - Fixed a problem in which add_to_cleanup() didn't note cleanup files
   unless create_build_script() had been called already. [Dave Rolsky]

 - During 'Build dist', we no longer have to load each .pm file (via
   Module::Info) to determine the $VERSION numbers inside.  Instead,
   we call our internal version_from_file() method, which is the same
   thing MakeMaker and PAUSE and search.cpan.org do.  Also fixes a
   failure when Module::Info is installed in a nonstandard directory.
   [reported by Teun Burgers]

 - Fixed some failing test code on Windows - open files can't be
   deleted. [Andrew Savige]

 - The Cygwin platform is now treated as a flavor of Unix rather than
   a flavor of Windows. [chocolateboy]

 - We're now more aggressive about adding temporary C compilation
   files (*.c, *.bs) to the cleanup list. [Dave Rolsky]

 - When constructing the list in META.yml of packages provided by this
   distribution, we now use the same rules as the PAUSE scanner does
   when a single .pm file contains multiple VERSIONs.  [Andreas Koenig]

 - check_installed_status() now works as both a class method and an
   object method (and is documented so).  [Spotted by Dave Rolsky]

0.18  Tue Apr  8 13:24:23 CDT 2003

 - We now rewrite the shebang lines of scripts ourselves, rather than
   relying on MakeMaker routines to do it.  MakeMaker changed the way
   this happened (not the result, but where the code lived) a few
   times.  [Suggested by Richard Clamp]

 - The scripts() method has changed to script_files(), and likewise
   the 'scripts' parameter has changed to 'script_files'.  The old
   names can still be used for backward compatibility.

 - Support for the 'scripts' parameter (which is now 'script_files')
   was broken in 0.17, now it's fixed.  [Richard Clamp]

 - We now recommend ExtUtils::ParseXS 2.02, which will fail to load
   with perl 5.005 or earlier (which is proper, because it doesn't
   work with those versions).  When it fails to load, we still fall
   back to using the xsubpp script for XS parsing. [spotted by Dave
   Rolsky, fix suggested by Richard Clamp]

 - Now works on VMS - the Build script's shebang-line-equivalent
   wasn't being formed correctly there - though just about everything
   else worked fine.  [Tested & patched by Michael Schwern]

 - Eliminated a warning that occurred if 'perl Build.PL' or the
   check_installed_status() method was run with -w.  [Spotted by
   Michael Schwern]

0.17  Sat Mar 29 18:06:01 CST 2003

 - Now works under perl 5.005_03.  [Richard Clamp]

 - When building blib/ , .PL files are now processed before doing
   anything else.  This means .PL files can be used in any of the
   other contexts.

 - The locating and processing of .pm, .pod, .xs, .PL files and script
   files are now isolated into their own methods.  This is aimed
   toward providing a stable interface for this stuff, so they can be
   overridden, parameterized, etc.  They're not quite stable yet,
   though.

 - The internal lib_to_blib() method has gone away, because processing
   is now done by smaller specialized methods.  This method had some
   duplicate assumptions about filenames that it's nice to get rid of.

 - .PL files are no longer automatically processed in the c_source
   directory, they must be specified manually in a 'PL_files'
   parameter.

 - Mention in the docs that it's useful to do "PL_FILES => {}" in a
   Makefile.PL if you're using both a Makefile.PL and a
   Build.PL. [Dom]

 - Add several options to the 'license' field, so that we're in better
   sync with PAUSE and CPAN options. [Andreas Koenig]

 - Created a find_perl_interpreter() method that tries to locate the
   currently executing perl interpreter.  Following a suggestion from
   Nicholas Clark <nick@ccl4.org> for Inline, we prefer an absolute
   path in $^X, then an existent path in $Config{perlpath}, then
   whatever's in $^X.

 - Use the aforementioned perl to run scripts in run_perl_script().
   This fixes the spurious warning "WARNING: Configuration was
   initially created with 'foo', but we are now using 'bar'" that
   appeared a lot in version 0.16.


0.16  Mon Feb 24 13:06:47 CST 2003

 - All three C compilers that perl supports on Windows environments
   (MSVC, BCC, and GCC) are now supported by Module::Build.  We now
   reportedly pass all tests on Windows.  [Randy W. Sims]

 - The test t/xs.t, which tests building of XS modules, will be
   skipped if no C compiler is found. [suggested by Randy W. Sims]

 - The "install" action accepts new "destdir" [motivated by Michael
   Schwern and Chip Salzenberg] and "uninst" parameters [by Dave
   Rolsky].  The former prepends an arbitrary directory to all
   installation paths (useful for package management), and the latter
   will tell ExtUtils::Install to remove any differing files that are
   "shadowing" the stuff you're installing from a different location,
   just like MakeMaker's "make install UNINST=1" command will do.

 - Made changes to the generated Makefile in Module::Build::Compat
   that much better support Windows platforms [after suggestions by
   James Freeman]

 - Added experimental support for creating distribution SIGNATURE
   files via Module::Signature. [Dave Rolsky]

 - Added experimental support for installing via the "only.pm" module,
   which allows loading specific versions of modules.  Since this
   module is so new, the interface may still be changing. [Brian
   Ingerson]

 - Added support for installing executable scripts, via the 'scripts'
   parameter to new(), and the scripts() accessor method.

 - Fix an infinite loop that occurred when doing 'perl Build.PL
   config="foo=bar"'

 - Fix up the formatting of the error message the user gets when
   prereqs aren't satisfied.

0.15  Fri Jan 17 15:00:24 CST 2003

 - In link_c(), extra object files were mistakenly being treated as
   output files, not input files, in the up-to-date check.  Fixed.

 - In up_to_date(), don't make an unnecessary copy of the file lists
   when they're specified as array references.

 - Split off the C compilation phase into its own method,
   compile_support_files(), for easier subclassing.

 - Start a stub of a 'manifypods' action.

 - Compiler optimizations weren't being included in C compilation
   statements.  Fixed.

 - The 'extra_linker_flags' parameter wasn't being honored.  Fixed.

 - The 'ccflags' Config.pm entry wasn't being properly split into
   separate arguments.  Fixed.


0.14  Fri Dec 13 14:06:29 AEST 2002

  - Added support for MacPerl (Mac OS version 9 and below), which (as
    far as I know) was never natively supported by MakeMaker.  Still
    lacks support for the 'test' action (because Test::Harness
    requires forking, which MacPerl won't do) and compiling XS/C files
    (because I don't know how to invoke a compiler on MacOS, and one
    may not even be available).  This change is brought to you by
    Michael Schwern and the letter '('.

  - Improved processing of .xs files.  Now we use the new
    ExtUtils::ParseXS module if it's available, otherwise we use
    backticks and write the result to a .c file ourselves.  This
    avoids the need to do cross-platform shell redirection.

  - Make sure all parts of 'Build test' use the not-yet-installed
    version of Module::Build.  This only affects the tests for this
    module, not any of the module code itself.  [Spotted by Schwern]

  - Oopsie - use $Config{ld} instead of $Config{cc} for linking.

  - Added a 'diff' action, which is useful for comparing the details
    of what you're about to install with what is already installed on
    your system.  This uses File::Compare, which is in the core.

  - Fixed a problem on Windows in which the _build/ directory wasn't
    getting deleted during the 'realclean' action, because we had a
    file open in that directory. [Spotted by Michael Schwern]

  - delete_filetree() now always uses File::Path::rmtree(), regardless
    of whether the thing being deleted is a file or a directory.  This
    helps remove things on obscure platforms with strange locking
    rules (or even not so obscure ones like MacOS).  It also now
    reports the number of files or directories deleted (without
    recursing directory contents).

  - rm_previous_build_script() is gone, replaced by calls to
    delete_filetree().

  - 'Build' now chdir()s in a BEGIN block, so the 'use Module::Build'
    statement will work correctly.  Solves a problem on MacOS, where
    the 'Build' script may often be invoked from the wrong working
    directory.  [Fix by Michael Schwern]

  - Internally we now use the multi-argument form of system() to run
    external commands (such as 'diff' or 'cc') whenever possible (and
    whenever we can't avoid system() altogether).  Note that this
    means we have to handle splitting some strings (such as
    $Config{ccflags}) into argument lists like the shell would, which
    is a drag.  However, the alternative would be to handle shell
    quoting of all arguments to commands ourselves, which is an even
    bigger drag across platforms and involves arbitrary filenames and
    so on.

  - To handle the argument splitting mentioned above, a method
    split_like_shell() has been created.  So far it's just doing naive
    processing.  In practice, I've yet to actually see a %Config entry
    that uses quotes & spaces, so the splitting task is usually not
    very error-prone.

  - The 'test' action now takes a 'test_files' parameter, similar to
    the (undocumented) ExtUtils::MakeMaker TEST_FILES argument.  Handy
    during development when fixing bugs.

  - Internally, the rscan_dir() method can now accept a predicate
    function that decides whether a file/directory should be matched.

  - We now issue a warning message when the author hasn't specified a
    license type.

0.13  Wed Nov 20 20:07:53 AEST 2002

  - 'cleanup' file lists are now written immediately, rather than at
    program termination.  This helps avoid "phantom files" that don't
    get handled by the 'realclean' action.  The internal
    write_cleanup() method (which was never documented) is now gone.

  - The 'blib/' directory is now properly cleaned up in more (all?)
    circumstances.  Previously it could become a phantom if
    create_build_script() was never called.

  - Now scan the 'c_source' directory for .cpp (C++) files as well as
    .c files, and compiles them.

  - Use a 'phony' target for 'make manifest' in the pass-through
    Makefile, for the same reason as 'make install' (see version 0.12
    notes below).

  - Module::Build::Compat now accepts any known Config.pm key and
    passes it through to the Build.PL.  Fixes a problem with CPANPLUS,
    which was passing INSTALLMAN1DIR.

  - The file 'META.yaml' has been re-named to 'META.yml' in order to
    cooperate better with systems that can only handle 3 characters
    after the dot.

  - The t/xs.t test should give more informative error messages upon
    failure.

0.12  Thu Nov 14 18:31:47 AEST 2002

  - The META.yaml file was erroneously looking for 'build_depends'
    instead of 'build_requires'. [spotted by Iain Truskett]

  - Add prompt() and y_n() methods for use in Build.PLs

  - Do more to work with all versions of Test::Harness when setting
    the TEST_VERBOSE flag and running under the debugger [patch by
    Dave Rolsky]

  - Include a test for verbosity handling

  - Make sure the blib/ directory is always cleaned up with the
    'clean' or 'realclean' action.

  - In a pass-through Makefile.PL, inform 'make' that 'install' is a
    "fake target", so that it works properly on case-insensitive
    filesystems like HFS+ with distributions that contain an INSTALL
    file. [patch by Brian Ingerson]

  - In Module::Build::Compat, show an example Makefile.PL that can
    install Module::Build and re-invoke itself in one fell swoop [Dave
    Rolsky and Autrijus Tang]

  - Improve the formatting of the Module::Build and
    Module::Build::Compat documentation.

0.11  Fri Aug 23 18:50:46 AEST 2002

  - 'module_version' and 'module_version_from' have been replaced by
    'dist_version' and 'dist_version_from', which is what they really
    meant in the first place.  'dist_name' has been added.

  - 'module_name' is now just a way to set 'dist_name' and
    'dist_version_from' in a convenient way.

  - The 'name' in META.yaml is now the distribution name, not the
    (incorrect) module name. [spotted by Graham Barr]

  - Added the check_installed_status() and prereq_failures() methods
    for checking prerequisite information with the programmatic
    interface

  - check_installed_version() now uses check_installed_status()
    internally

  - Documented the create_build_script() method, which had escaped
    documentation.

  - create_build_script() now writes prerequisite information to the
    _build/ directory, for use by Module::Build::Compat.

  - Module::Build::Compat has documentation for a safer way to write a
    dummy Makefile.PL. [patch by Autrijus Tang]

0.10  Wed Aug  7 19:36 2002
  - Recommend YAML 0.35 instead of 0.30.

  - Don't die during 'Build disttest' if YAML isn't installed.  This
    fixes tests 5-10 in runthrough.t if YAML isn't installed.

  - Die if an unknown license type is used, but still default to
    'unknown' if no license is specified.

  - Use YAML::DumpFile() if we're using a recent YAML,
    YAML::StoreFile() otherwise.

  - Show specific error messages in runthrough.t.

  - Add a generated_by entry to the META.yaml file.

  - Skip a few tests if YAML isn't installed.

0.09  Fri Jun 28 11:07:08 EST 2002

  - The 'distdir' action wasn't deleting the distribution directory
    before building it again.  This meant that, say, if you did 'Build
    disttest' then 'Build dist', you'd end up with a blib/ directory
    in your distribution.  I actually had this happen for version
    0.08, and it's not nice to distribute a blib/ on CPAN.

  - We now keep track of the 'base_dir', i.e. the top-level build
    directory, so we can change back into it if we change out of it.
    This necessitated a cwd() method, which uses the Cwd.pm module.
    I'm aware of Cwd's limitations, particularly under taint-mode, but
    I don't know a way around using it here.

  - The 'dist_dir' action now changes back into 'base_dir' directory.

  - We now do write_config() inside the create_build_script() method,
    not inside the new() method.

  - Simplified the find_version() method, and improved its error
    messages.

  - Renamed module_name_to_file() to find_module_by_name(), and added
    a parameter specifying the directories to search in.  Previously
    we searched in 'lib' and @INC, which wasn't correct in all
    situations. 

  - Patched the docs to change "Build test" to "./Build test"
    [Elizabeth Mattijsen]

0.08  Wed Jun 26 20:30:56 EST 2002

  - Fixed the 'prereq' alias for the 'requires' parameter

  - Added some tests in t/basic.t to test the dependency checking

  - Added 'artistic' as a licensing option [Arthur Bergman]

  - Fixed some bugs in requires/prereq/recommends/conflicts/build_depends

  - Fixed a typo in the 'distclean' action that prevented its
    execution [Arthur Bergman]

  - Separated the linking phase of building XS items into its own
    link_c() method.  Its interface is still unstable, so it's not
    documented yet. [suggested by Arthur Bergman]

0.07  Jun  9 2002 15:46

  - We now generate a 'META.yaml' metadata file during 'Build dist'.
    This can be very useful for lots of things, none of which are
    implemented yet.

  - Added a 'dynamic_config' parameter, defaulting to false.  This
    lets distribution systems (CPAN.pm, etc.) build, test, and install
    "easy" modules without having to execute the Build.PL at runtime.
    It's also a guarantee that the list of dependencies is exactly
    what is present in the metadata file, and won't be changed during
    the build process.

  - Added support for "recommended" and "build-time requirement"
    modules, besides those that are absolutely required.  Also added a
    "conflicts" field.

  - Changed the 'prereq' field to 'requires' (the old name will
    continue to work).

  - Added support for checking the installed version of perl as an
    explicit dependency.

  - Added a 'license' parameter to specify one of a fixed number of
    licenses for the distribution.

  - Fixed a bug in Module::Build::Compat that was preventing arguments
    from being processed properly. [patch by Ilya Martynov]

  - Make sure we're in the right directory when we write the cleanup
    file, since various ExtUtils::Install errors might leave us in an
    unknown directory. [patch by Ilya Martynov]

  - Specified the 'license', 'recommends', and 'dynamic_config'
    values in Build.PL, and changed 'prereq' to 'requires'.

0.06  Apr 2 2002 17:44

  - Added the Module::Build::Compat module for assisting and
    explaining compatibility with ExtUtils::Makemaker and cohorts.

  - State is now saved using Data::Dumper instead of my ad-hoc
    mechanism, guaranteeing data integrity.  Whitespace values broke
    in the former scheme.

  - Added the 'recommended' option, which works like 'prereq' but
    isn't insistent.

  - Separated the various parameters into three groups: parameters
    that tell Module::Build what to do, Config.pm parameters, and
    user-defined parameters for each build (the module author is the
    'user' here).  This helps avoid conflicts between names, and it
    was silly to have them all together.  The three groups of
    parameters are subject to the same rules for overriding: values
    specified during a Build action take precedence over values
    specified at 'perl Build.PL' time, which in turn take precedence
    over values specified in the call to new().

  - Improved support for .PL files.  Any .PL file in the lib/
    directory or the directory specified by 'c_source' will now get
    properly executed.  I also added a 'PL_files' parameter that you
    can use in case the .PL doesn't create an obviously-named output
    file.

  - If a prerequisite condition is malformed, we now report a prereq
    failure and say why.  Previously we issued a warning and kept
    going.


0.05   10-Jan-2002 20:26
  - Added the Module::Build->subclass() method, which makes it easier to
    make quick-and-dirty subclasses of Module::Build.

  - Reorganized the docs a bit.

  - Added the 'testdb' action, and the 'debugger=1' argument to the
    'test' action, both of which run tests under the perl
    debugger. (idea: Dave Rolsky)

  - Added prerequisite checking (Dave Rolsky)

  - Fixed an unlikely-to-occur bug with misquoted strings in the
    'Build' script (spot: Dave Rolsky)

  - We're more careful about shush-ing warnings that
    ExtUtils::Manifest might emit (Dave Rolsky)

  - The 'help' action now auto-generates the list of actions (Dave Rolsky)

  - Added the 'distcheck', 'skipcheck', 'distclean', 'distdir', and
    'disttest' actions (Dave Rolsky)

  - We're a little more aggressive about cleaning up temporary files -
    we'll try to clean them up even when we don't have write permission
    on them.  This isn't as dastardly as it sounds; if we /really/
    don't have permission, we won't be able to remove them no matter
    how hard we try.

0.04   Fri Nov 16 16:55 2001
  - Added a 'manifest' action.  It's just like MakeMaker's 'make manifest', it
    brings your MANIFEST file up to date with your distribution directory.

  - Reorganized some of the responsibilities of various methods, which
    allows modules to be built and tested programmatically.

  - The 'clean' action will now clean up files that were created more
    recently than the on-disk cleanup registry was written.

  - Undefined values from Config.pm are handled correctly now.

  - The dispatch() method will now accept explicit dispatch
    parameters, for use in a programmatic setting.

  - $ENV{TEST_VERBOSE} will be set in test scripts if the 'verbose=1'
    parameter is set.

  - Moved the test.pl script to t/basic.t

  - Created the t/xs.t script, which tests building a module with a
    .xs component.

  - Fixed the loading of $^O-specific modules (there were no such
    modules before).

  - Added a 'darwin' platform module, which removes -flat_namespace
    from $Config{ccflags} while building .xs modules (it's a linker
    flag, not a compiler flag).

  - Now uses $^W instead of the 'warnings' pragma, which apparently
    provides compatibility with perl 5.005 (I've only tested it with
    5.6.x myself).

  - If a file called C<visual.pl> exists in the top-level directory,
    this file will be executed as a Perl script during 'Build test' and
    its output will be shown to the user.  This is a good place to put
    speed tests or other tests that don't use the C<Test::Harness> format
    for output.

  - The 'Build install' step will now put .xs-related things in the
    correct architecture-dependent libraries.

  - Added the 'autosplit' option, even though I think autosplitting is
    a load of hooie.

0.03  Sun Nov 11 14:58 CDT 2001
  - The 'perl Build.PL' step will now detect whether the current
    environment is "unixish", "windowsish", etc., and load the correct
    module (i.e. Module::Build::Platform::Unix).  More specific
    modules may also be written for particular values of $^O.

  - Module::Build will now process any .xs files in the lib/
    directory.  Please let me know whether this works or not with your
    distribution & platform.  I'll be trying out various distributions
    on my platform.

  - Corrected some embarassing errors in the POD documentation.  Also
    added a long documentation section on the various build actions
    (test, install, build, etc.) and added some neato ASCII art.

  - Added a 'cleanup' mechanism - any method may call the
    $self->add_to_cleanup(@files) method to register files which need
    to be cleaned up during 'Build clean'.

  - Added a 'Build help' action that gives a little syntax help, and
    lists all the actions available.

  - Fixed a bug in which 'blib/' wasn't properly being added to @INC
    when running 'Build test'.

  - For the 'Build dist' action, we'll use the 'tar' and 'gzip'
    programs (as specified by Config.pm) on Unix platforms, otherwise
    we'll use Archive::Tar and Compress::Zlib.
 
0.02  Wed Sep  5 00:53:04 CDT 2001
  - Added POD documentation.

  - Added the 'install', 'fakeinstall', and 'dist' actions.

  - new() will now determine version string based on 'module_version', or
    'module_version_from', or 'module_name', in that order.

  - Module::Build::Base handles its file paths in a platform-independent
    way, using the File:: modules


0.01  Sun Aug  5 01:23:10 2001
  - original version; created by h2xs 1.1.1.4 with options -XA -n Module::Build

